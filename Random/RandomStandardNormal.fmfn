/**
 * =====================================
 * RandomStandardNormal
 *
 * PURPOSE:
 * 		When called repeatedly, RandomStandardNormal creates values consistent
 *		with a normally distributed random variable with mean of 0 and standard
 *		deviation of 1.
 *
 * RETURNS:
 *		A number representing a random variate from the standard normal
 *		distribution.
 *
 * PARAMETERS: none
 *
 * VARIABLES:
 *		$$~STANDARDNORMAL: Saves the extra value from the sampling method for
 *		future reference as a performance improvement.
 *
 * DEPENDENCIES: none
 *
 * HISTORY:
 *		MODIFIED on 2011-02-22 by Jeremy Bante to store the Marsaglia polar
 *		method's extra value for later use.
 *		CREATED on 2010-02-22 by Jeremy Bante <http://scr.im/jbantetsg>.
 *
 * REFERENCES:
 *		http://en.wikipedia.org/wiki/Normal_distribution
 * =====================================
 */

If ( not IsEmpty ( $$~STANDARDNORMAL );
	//Use duplicate value from previous use of function
	$$~STANDARDNORMAL
	& Let ( $$~STANDARDNORMAL = "" ; "" );

	//Else, find new value with Marsaglia polar sampling method
	Let( [
		~x = Random * 2 - 1; //begin with random points
		~y = Random * 2 - 1;
		~radiusSquared = ~x ^ 2 + ~y ^ 2
	];

		Case (
			~radiusSquared < 1; //(~x, ~y) is inside the unit circle
				~x //return value
				* sqrt ( -2 * ln ( ~radiusSquared ) / ~radiusSquared )
				& Let (
					$$~STANDARDNORMAL = //save extra value
						~y
						* sqrt ( -2 * ln ( ~radiusSquared ) / ~radiusSquared );
					""
				);

			//Else, reject guess and sample again
				RandomStandardNormal
		)
	)
)