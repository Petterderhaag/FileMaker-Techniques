/**
 * =====================================
 * RandomBinomial ( probability ; trials )
 *
 * PURPOSE:
 *		When called repeatedly, RandomBinomial returns values consistent with a
 *		binomial random variable with probability of "event success" and number
 *		of trials specified by the parameters.
 *
 * RETURNS:
 *		A number between 0 (zero) and trials representing a random variate from
 *		a binomial distribution with the specified parameters.
 *
 * PARAMETERS:
 *		probability: A number, 0 ≤ probability ≤ 1
 *		trials: A positive integer
 *
 * DEPENDENCIES: none
 *
 * HISTORY:
 *		CREATED on 2010-02-22 by Jeremy Bante <http://scr.im/jbantetsg>.
 *
 * REFERENCES:
 *		http://en.wikipedia.org/wiki/Binomial_distribution
 * =====================================
 */

Let ( [
	~trials = Abs ( Int ( trials ) );
	~guess = Round ( Random * ~trials; 0 );

	//mode of Binomial distribution
	~mode1 = Ceiling ( ~trials * probability );
	~mode2 = Floor ( ~trials * probability );

	//max probability of Binomial distribution
	~mode1Mass =
		( probability ^ ~mode1 )
		* ( ( 1 - probability ) ^ ( ~trials - ~mode1 ) );
	~mode2Mass =
		( probability ^ ~mode2 )
		* ( ( 1 - probability ) ^ ( ~trials - ~mode2 ) );

	~scaleFactor =
		If ( ~mode1Mass ≥ ~mode2Mass;
			1 / ~mode1Mass;
			/*else*/ 1 / ~mode2Mass
		);
	~rejectionThreshold = //probability mass at ~guess
		( probability ^ ~guess )
		* ( ( 1 - probability ) ^ ( ~trials - ~guess ) )
		* ~scaleFactor //maps function to [0,1] for max acceptance rate
];
	Case (
		0 > probability or 1 < probability; //parameter out of bounds
			"?"; //error

		Random ≤ ~rejectionThreshold;
			~guess;

		//Else, reject ~guess and sample again
			RandomBinomial ( probability ; ~trials )
	)
)