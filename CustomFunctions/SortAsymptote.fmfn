/**
 * =====================================
 * SortAsymptote ( ordinal )
 *		http://www.briandunning.com/cf/1280
 *
 * PURPOSE:
 *		Limits the range of ordinal to fit within (-1,1). This can be useful
 *		when creating nested custom sort orders, where "child" records have a
 *		numeric sort order, but must also respect the sort order of "parent"
 *		records, so that child records with the same parent record cluster
 *		together. In these cases, this function can be used to restrict the
 *		child sort order to be smaller than the order of magnitude for the
 *		parent sort order.
 *
 * RETURNS:
 *		A number, -1 < number < 1.
 *		If a < b, then SortAsymptote ( a ) < SortAsymptote ( b ).
 *		If a > 0, then SortAsymptote ( a ) > 0.
 *
 * PARAMETERS:
 *		ordinal: The number used for within-group sorting
 *
 * DEPENDENCIES: none
 *
 * EXAMPLE:
 *		Let ( [
 *			~sort = Child::sort;
 *			~sort = Parent::sort + SortAsymptote ( ~sort );
 *			~sort = Grandparent::sort + SortAsymptote ( ~sort )
 *		];
 *			~sort
 *		)
 *
 * HISTORY:
 *		CREATED on 2011-02-15 by Jeremy Bante <http://scr.im/jbantetsg>.
 * =====================================
 */

Let ( [
	~ordinal = Ln ( Abs ( ordinal ) + 1 ); //Flatten the range
	~sort = ~ordinal / ( 1 + ~ordinal ) //Confine to asymptote
];
	If ( ordinal < 0 ; 0 - ~sort ; /*else*/ ~sort )
)