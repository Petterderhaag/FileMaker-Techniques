/**
 * =====================================
 * ICS.vEvent ( data )
 *
 * PURPOSE:
 *		Creates a vEvent object according to the iCalendar object specification
 *		(RFC 5545)
 *
 * RETURNS:
 *		An Internet Calendar and Scheduling vEvent object
 *
 * PARAMETERS:
 *		data: A collection of name-value pairs containing data to include in the
 *		vEvent object
 *
 * DATA:
 *		attendee: A ¶-delimited list of attendees (as generated by ICS.Attendee)
 *		comment
 *		contact: A text description of contact information for the event
 *		description: A more complete description of the event than summary
 *		dtend: End timestamp, non-inclusive
 *		dtstamp: A creation timestamp (defaults to the current timestamp)
 *		dtstart: Start timestamp, inclusive
 *		location
 *		status: enumerated: "TENTATIVE", "CONFIRMED", "CANCELLED"
 *		summary: A brief description for the event
 *		uid: A unique identifier
 *		url
 *
 * DEPENDENCIES:
 *		#Get
 *		ICS.Escape
 *		ICS.Timestamp
 *		UUIDGetAsRFC4122
 *		UUIDTimestamp
 *
 * HISTORY:
 *		CREATED on 2011-03-25 by Jeremy Bante <http://scr.im/jbante>.
 *
 * REFERENCES:
 *		iCalendar Specification: http://tools.ietf.org/html/rfc5545
 * =====================================
 */

Let ( [
	~attendee = #Get ( data ; "attendee" );
	~attendee =
		If ( not IsEmpty ( ~attendee );
			"ATTENDEE"
			& Substitute ( ~attendee ; "¶" ; "¶ATTENDEE" )
		);

	~comment = ICS.Escape ( #Get ( data ; "comment" ) );
	~contact = ICS.Escape ( #Get ( data ; "contact" ) );
	~dtend = ICS.Timestamp ( #Get ( data ; "dtend" ) );

	~dtstamp = #Get ( data ; "dtstamp" );
	~dtstamp =
		If ( IsEmpty ( ~dtstamp );
			Get ( CurrentHostTimestamp );
			/*Else*/ ~dtstamp
		);

	~dtstart = ICS.Timestamp ( #Get ( data ; "dtstart" ) );
	~description = ICS.Escape ( #Get ( data ; "description" ) );
	~location = ICS.Escape ( #Get ( data ; "location" ) );
	~status = Upper ( #Get ( data ; "status" ) );
	~summary = ICS.Escape ( #Get ( data ; "summary" ) );

	~uid = #Get ( data ; "uid" );
	~uid =
		"UID:"
		& If ( IsEmpty ( ~uid );
			UUIDGetAsRFC4122 ( UUIDTimestamp );
			/*Else*/ ~uid
		);

	~url = #Get ( data ; "url" )
];
	List (
		"BEGIN:VEVENT";
		~uid;
		"DTSTAMP:" & ICS.Timestamp ( ~dtstamp );
		If ( not IsEmpty ( ~dtstart ) ; "DTSTART:" & ~dtstart );
		If ( not IsEmpty ( ~dtend ) ; "DTEND:" & ~dtend );
		If ( not IsEmpty ( ~comment ) ; "COMMENT:" & ~comment );
		If ( not IsEmpty ( ~description ) ; "DESCRIPTION:" & ~description );
		If ( not IsEmpty ( ~status ) ; "STATUS:" & ~status );
		If ( not IsEmpty ( ~summary ) ; "SUMMARY:" & ~summary );
		If ( not IsEmpty ( ~location ) ; "LOCATION:" & ~location );
		~attendee;
		If ( not IsEmpty ( ~contact ) ; "CONTACT:" & ~contact );
		If ( not IsEmpty ( ~url ) ; "URL:" & ~url );
		"END:VEVENT"
	)
)