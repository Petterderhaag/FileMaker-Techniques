/**
 * =====================================
 * Test ( assert ; description ; failDiagnostic )
 *
 * PURPOSE:
 *		Used as a shorthand for organizing data about automated testing outcomes.
 *
 * RETURNS:
 *		A series of name-value pairs describing the outcome of the test.
 *
 * PARAMETERS:
 *		assert: A boolean value indicating whether the test passed or failed. Any
 *		calculation that evaluates to True indicates that the test passed; false indicates
 *		that the test failed.
 *		description: A description of the correct result or behavior being tested.
 *		failDiagnostic: A message with clarifying details to include if the test fails.
 *
 * EXAMPLE:
 *		Let ( [
 *			~result = 1 + 1;
 *			~expectedResult = 2
 *		];
 *			Test (
 *				~result = ~expectedResult;
 *				"One plus one equals two.";
 *				"Expected result is "
 *				& ~expectedResult
 *				& ". Actual result is "
 *				& ~result
 *				& "."
 *			)
 *		)
 *
 * DEPENDENCIES:
 *		# ( name ; value )
 *
 * HISTORY:
 *		CREATED on 2012-05-31 by Jeremy Bante <http://scr.im/jbante>.
 * =====================================
 */

# ( "timestamp" ; Get ( CurrentTimestamp ) )
& # ( "description" ; description )
& # ( "pass" ; GetAsBoolean ( assert ) )
& If ( not assert ; # ( "diagnostic" ; failDiagnostic ) )