/*******************************************************************************
 * Base64FromHex ( hexString )
 * Converts the binary data represented by a string of hexadecimal to base 64.
 *
 * @parameter hexString: a string of hexadecimal data (with no delimiters
 * between bytes)
 *
 * @return base 64-encoded data
 *
 * @history 2017-01-11 - Jeremy Bante <http://scr.im/fugue> - Created
 ******************************************************************************/

Let ( [
	// each recursive call converts a 3-byte chunk
	_firstBytes = Lower ( Left ( hexString ; 6 ) ) ;
	_length = Length ( _firstBytes ) ;
	_lengthError = Mod ( _length ; 2 ) â‰  0 ;	// whole bytes only
	_numberOfBytes = _length / 2 ;
	_expression =	// convert _firstBytes to a numeric expression
		Choose ( _numberOfBytes ; "" ; "( ( " ; "( ( ( ( " ; "( ( ( ( ( ( " )
		& 0
		& Substitute ( _firstBytes ;
			// convert hex to decimal
			[ "0" ; "x0" ] ; [ "1" ; "x1" ] ; [ "2" ; "x2" ] ; [ "3" ; "x3" ] ;
			[ "4" ; "x4" ] ; [ "5" ; "x5" ] ; [ "6" ; "x6" ] ; [ "7" ; "x7" ] ;
			[ "8" ; "x8" ] ; [ "9" ; "x9" ] ; [ "a" ; "x10" ] ; [ "b" ; "x11" ] ;
			[ "c" ; "x12" ] ; [ "d" ; "x13" ] ; [ "e" ; "x14" ] ; [ "f" ; "x15" ] ;
			// insert arithmetic
			[ "x" ; " ) * 16 + " ]
		) ;
	_number = Evaluate ( _expression ) ;
	_base64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/" ;
	_base64String = Middle ( _base64 ; Mod ( _number ; 64 ) + 1 ; 1 ) ;
	_number = Div ( _number ; 64 ) ;
	_base64String = Middle ( _base64 ; Mod ( _number ; 64 ) + 1 ; 1 ) & _base64String ;
	_number = Div ( _number ; 64 ) ;
	_base64String = Middle ( _base64 ; Mod ( _number ; 64 ) + 1 ; 1 ) & _base64String ;
	_number = Div ( _number ; 64 ) ;
	_base64String = Middle ( _base64 ; Mod ( _number ; 64 ) + 1 ; 1 ) & _base64String ;
	_base64String =
		Right (
			_base64String & Choose ( _numberOfBytes ; "" ; "==" ; "=" ; "" ) ;
			4
		) ;
	_number = Div ( _number ; 64 ) ;
	_remainder = Replace ( hexString ; 1 ; 6 ; "" )
] ;
	If ( _lengthError ; "?" ; /* Else */ _base64String )
	& If ( _numberOfBytes = 3 and not IsEmpty ( _remainder ) ;
		Base64FromHex ( _remainder )
	)
)