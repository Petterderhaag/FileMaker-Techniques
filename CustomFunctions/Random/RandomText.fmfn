/**
 * =====================================
 * RandomText ( textLength ; minCharCode ; maxCharCode )
 *
 * RETURNS:
 *		A random text string of length textLength. The returned string can
 *		include characters from the range between minCharCode and maxCharCode,
 *		up to the entire character set supported by FileMaker, excluding ASCII
 *		control characters (code 0 through 32, and 127).
 *
 * PARAMETERS:
 *		textLength: The length of the desired result
 *		minCharCode: The Unicode character code at the minimum of the range of
 *		acceptable values. Defaults to 32 when passed a smaller or empty value.
 *		maxCharCode: The Unicode character code at the maximum of the range of
 *		acceptable values. Defaults to 65535 when passed a larger or empty
 *		value.
 *
 * DEPENDENCIES: none
 *
 * HISTORY:
 *		MODIFIED on 2012-12-17 by Jeremy Bante <http://scr.im/jbante> to reject
 *		problem characters for diacritical marks and accept some control
 *		characters.
 *		MODIFIED on 2012-11-28 by Jeremy Bante <http://scr.im/jbante> to not
 *		return characters between Unicode 55295 and 57348, which are sometimes
 *		mishandled by FileMaker.
 *		MODIFIED on 2012-11-10 by Jeremy Bante <http://scr.im/jbante> to fix a
 *		bug where the character range could be incorrect if one parameter is
 *		empty and the other is not.
 *		CREATED on 2012-11-08 by Jeremy Bante <http://scr.im/jbante>.
 *
 * REFERENCES:
 *		http://en.wikipedia.org/wiki/ASCII
 *		http://en.wikipedia.org/wiki/UTF-8
 * =====================================
 */

Case (
	textLength < 1 ;
		"" ;

	IsEmpty ( minCharCode ) or IsEmpty ( maxCharCode ) ;
		RandomText (
			textLength ;
			Max ( minCharCode ; 0 ) ;
			Min ( maxCharCode ; 65535 )
		);

	maxCharCode < minCharCode ;
		RandomText ( textLength ; maxCharCode ; minCharCode ) ;

	/* Else */
		Let ( [
			minCharCode = Max ( minCharCode ; 0 ) ;
			maxCharCode = Min ( maxCharCode ; 65535 ) ;
			~code =
				Round (
					Random * ( maxCharCode - minCharCode ) + minCharCode ;
					0
				) ;
			~character = Char ( ~code ) ;
			~reject =	// check that character is well-behaved
				~code < 9	// reject most control characters
				or ( ~code > 13 and ~code < 32 )
				or ~code = 127	// delete character
				// some characters attach themselves to the preceding character
				or Length ( Code ( Left ( "$" & ~character ; 1 ) ) ) > 5
				// some characters get converted to other characters
				or Code ( Evaluate ( Quote ( ~character ) ) ) â‰  ~code
		];
			If ( ~reject ;
				RandomText ( textLength ; minCharCode ; maxCharCode ) ;
			/* Else */
				~character
				& RandomText ( textLength - 1 ; minCharCode ; maxCharCode )
			)
		)
)