/*******************************************************************************
 * RandomWeightedRank ( total )
 * Returns a random integer between 1 and total such that the probability of
 * each number is proportional to itself. For example, 2 is twice as likely as
 * 1, and 3 is 3 times as likely as 1. This may be useful for ordinally weighted
 * lotteries, where applicants have a number of lottery tickets determined by
 * some ranking. For example, you might want to randomly award a scholarship,
 * but you might also want individuals with greater financial need to be more
 * likely to receive the scholarship.
 *
 * @parameter total: The number of items in a list to select from.
 *
 * @return A number between 1 and total
 *
 * @history 2012-02-08 - Jeremy Bante <http://scr.im/jbante> - Created
 ******************************************************************************/

Let ( [
	_sampleSpace = total * ( total + 1 ) / 2 ;	// sum of all ranks
	_random = Ceiling ( Random * _sampleSpace )	// sample from "lottery"
] ;
	// find "winning" rank as inverse of sum of ranks formula
	Ceiling (
		( Sqrt ( 8 * _random + 1 ) - 1 ) / 2
	)
)