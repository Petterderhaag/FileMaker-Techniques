/**
 * =====================================
 * CarouselLoad
 *
 * PURPOSE:
 *		Sets the global variables $$CAROUSEL_PRIORLAYOUT and
 *		$$CAROUSEL_NEXTLAYOUT for display on layouts in carousel-style system
 *		navigation. This navigation pattern can be particularly useful in files
 *		used as a presentation device, such as technique demonstration files.
 *
 * PARAMETERS: none
 *
 * RETURNS: Null
 *
 * DEPENDENCIES:
 *		This function requires developers to adhere to a layout naming
 *		convention for correct operation. Layouts that will be omitted from the
 *		normal sequence for a file must be prefixed with either "-" (like
 *		separator layouts) or "//" (like C++ style comments).
 *
 * HISTORY:
 *		CREATED on 2011-01-20 by Jeremy Bante <http://scr.im/jbantetsg>.
 * =====================================
 */

Case (
	/* Step 0, initialize processing */
	not $~step;
	Let ( [
		$~layoutNames = LayoutNames ( Get ( FileName ) );
		$~layoutCount = ValueCount ( $~layoutNames );
		$~layoutNumber = Get ( LayoutNumber );
		$~step = 1
	];
		CarouselLoad
	);
	
	/* Step 1, find previous layout */
	$~step = 1;
	Let ( [
		$~i =
			Case (
				IsEmpty ( $~i ) and $~layoutNumber = 1 ; $~layoutCount;
				IsEmpty ( $~i ) ; $~layoutNumber - 1;
				$~i = 1 ; $~layoutCount;
				/*else*/ $~i - 1
			);
		$$CAROUSEL_PRIORLAYOUT = GetValue ( $~layoutNames ; $~i );
		$~step =
			If (
				//skip separators and hidden layouts, only
				Left ( $$CAROUSEL_PRIORLAYOUT ; 1 ) ≠ "-"
				and Left ( $$CAROUSEL_PRIORLAYOUT ; 2 ) ≠ "//"
				or $~i = $~layoutNumber; //search is exhausted
					$~step + 1;
			
				/*else*/ $~step
			)		
	];
		CarouselLoad
	);
	
	/* Step 2, find next layout */
	$~step = 2;
	Let ( [
		$~j =
			Case (
				IsEmpty ( $~j ) and $~layoutNumber = $~layoutCount ; 1;
				IsEmpty ( $~j ) ; $~layoutNumber + 1;
				$~j = $~layoutCount ; 1;
				/*else*/ $~j + 1
			);
		$$CAROUSEL_NEXTLAYOUT = GetValue ( $~layoutNames ; $~j );
		$~step =
			If (
				//skip separators and hidden layouts
				Left ( $$CAROUSEL_NEXTLAYOUT ; 1 ) ≠ "-"
				and Left ( $$CAROUSEL_NEXTLAYOUT ; 2 ) ≠ "//"
				or $~j = $~layoutNumber; //search is exhausted
					$~step + 1;
					
				/*else*/ $~step
			)		
	];
		CarouselLoad
	);
	
	/* Step 3, clean-up */
	$~step = 3;
	Let ( [
		//purge variables
		$~i = "";
		$~j = "";
		$~layoutCount = "";
		$~layoutNames = "";
		$~layoutNumber = "";
		$~step = ""
	];
		"" //no return value needed
	)
)