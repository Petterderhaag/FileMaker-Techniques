/**
 * =====================================
 * CrumbTabLayoutName ( moduleNumber ; crumbNumber )
 *
 * PURPOSE:
 *		Retrieves a layout name from a global variable that can be used as the
 *		destination in a "Go to Layout by Name" operation. This function
 *		expects that global variable to be populated before being called.
 *
 * RETURNS:
 *		A layout name
 *
 * PARAMETERS:
 *		moduleNumber
 *		crumbNumber
 *
 * VARIABLES:
 *		$$CRUMBMODULELIST: A return-delimited list of modules
 *
 * DEPENDENCIES:
 *		#Get ( parameters ; name )
 *		CrumbLayoutName ( theCrumb )
 *
 * HISTORY:
 *		CREATED on 2011-03-28 by Jeremy Bante <http://scr.im/jbantetsg>.
 * =====================================
 */

Let ( [
	~module = Evaluate ( GetValue ( $$CRUMBMODULELIST ; moduleNumber ) );
	~crumbCount = ValueCount ( ~module );
	~crumb = Evaluate ( GetValue ( ~module ; crumbNumber ) )
];
	Case (
		// Source data are empty, return Null
		IsEmpty ( ~module )
		or crumbNumber < 1;
			""; // Null

		// Source data are empty, check previous Crumb in list
		IsEmpty ( ~crumb );
			CrumbTabLayoutName (
				moduleNumber;
				Min ( crumbNumber - 1 ; ~crumbCount )
			);

		// Return valid result
		CrumbLayoutName ( ~crumb )
	)
)