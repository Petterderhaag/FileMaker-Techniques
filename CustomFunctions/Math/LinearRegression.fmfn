/*******************************************************************************
 * LinearRegression ( xList ; yList )
 * Calculates the least squares linear regression on a set of pairs of numbers.
 *
 * @parameter xList: A return-delimited list of numbers
 * @parameter yList: A return-delimited list of numbers
 *
 * @return An expression of the form B + Ax, where A and B represent the
 * coefficients of a linear regression.
 *
 * @history 2014-01-13 - Jeremy Bante <http://scr.im/fugue> - Created
 *
 * @see http://en.wikipedia.org/wiki/Simple_linear_regression
 * @see http://en.wikipedia.org/wiki/Algorithms_for_calculating_variance
 ******************************************************************************/

Case (
	/* Step 0, set-up first iteration */
	not $~linReg.step ;
		Let ( [
			$~linReg.n = $~linReg.n + 1 ;
			$~linReg.x = GetValue ( xList ; $~linReg.n ) ;
			$~linReg.y = GetValue ( yList ; $~linReg.n ) ;
			$~linReg.step =
				If ( IsEmpty ( $~linReg.x ) or IsEmpty ( $~linReg.y ) ; -1 ; /* Else */ 1 )
		] ;
			LinearRegression ( xList ; yList )
		) ;

	/* Step 1, calculate sums */
	$~linReg.step = 1 ;
		Let ( [
			$~linReg.sumX = $~linReg.sumX + $~linReg.x ;
			$~linReg.sumXSquared = $~linReg.sumXSquared + $~linReg.x ^ 2 ;
			$~linReg.sumY = $~linReg.sumY + $~linReg.y ;
			$~linReg.sumXY = $~linReg.sumXY + $~linReg.x * $~linReg.y ;

			// set-up next pair
			$~linReg.n = $~linReg.n + 1 ;
			$~linReg.x = GetValue ( xList ; $~linReg.n ) ;
			$~linReg.y = GetValue ( yList ; $~linReg.n ) ;
			$~linReg.step =
				If ( IsEmpty ( $~linReg.x ) or IsEmpty ( $~linReg.y ) ; 2 ; /* Else */ 1 )
		] ;
			LinearRegression ( xList ; yList )
		) ;

	/* Step 2, clean-up and return result */
	$~linReg.step = 2 or $~linReg.step = -1 ;
		Let ( [
			~error = $~linReg.step = -1 ;

			~n = $~linReg.n - 1 ;
			~slope =
				( ~n * $~linReg.sumXY - $~linReg.sumX * $~linReg.sumY )
				/ ( ~n * $~linReg.sumXSquared - $~linReg.sumX ^ 2 ) ;
			~intercept = $~linReg.sumY / ~n - ~slope * $~linReg.sumX / ~n ;
			~result = ~intercept & " + " & ~slope & " * x" ;

			// purge variables
			$~linReg.n = "" ;
			$~linReg.step = "" ;
			$~linReg.sumX = "" ;
			$~linReg.sumXSquared = "" ;
			$~linReg.sumXY = "" ;
			$~linReg.sumY = "" ;
			$~linReg.x = "" ;
			$~linReg.y = ""
		] ;
			If ( ~error ; "?" ; /* Else */ ~result )
		)
)